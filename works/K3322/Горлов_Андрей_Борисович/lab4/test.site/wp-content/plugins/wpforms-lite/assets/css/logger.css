#logs-filter th#date {
  width: 19ch;
}

.wpforms-log-popup {
  background-color: #ffffff;
  padding: 20px 20px 10px;
  font-size: 14px;
  line-height: 20px;
  width: 100%;
  text-align: left;
  color: #444;
}

.wpforms-log-popup-flex, .wpforms-log-popup-block {
  padding-top: 15px;
  padding-bottom: 25px;
  border-bottom: 1px solid #e4e4e4;
}

.wpforms-log-popup-flex:first-child, .wpforms-log-popup-block:first-child {
  padding-top: 0;
}

.wpforms-log-popup-flex:last-child, .wpforms-log-popup-block:last-child {
  padding-bottom: 0;
  border-bottom: 0;
}

.wpforms-log-popup-flex {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  margin-left: -10px;
  margin-right: -10px;
}

.wpforms-log-popup-flex > div {
  padding: 0 10px;
}

.wpforms-log-popup-flex-column-2 > div {
  flex: 0 0 50%;
}

.wpforms-log-popup-flex-column-4 > div {
  flex: 0 0 25%;
}

.wpforms-log-popup-label {
  font-weight: 600;
  font-size: 16px;
  margin-bottom: 4px;
}

.wpforms-log-popup-message {
  overflow-x: auto;
}

.wpforms-log-popup-message::-webkit-scrollbar {
  height: 6px;
}

.wpforms-log-popup-message::-webkit-scrollbar-track {
  background: #c5c5c5;
  border-radius: 6px;
}

.wpforms-log-popup-message::-webkit-scrollbar-thumb {
  background-color: #666;
  border-radius: 6px;
  border: 6px solid #666;
}

.wpforms-log-popup a {
  color: inherit;
}

@media screen and (max-width: 782px) {
  .wpforms-log-popup {
    padding: 0;
  }
  .wpforms-log-popup .wpforms-log-popup-flex {
    padding-top: 0;
    padding-bottom: 0;
  }
  .wpforms-log-popup .wpforms-log-popup-flex-column-2 > div {
    flex: 0 0 100%;
    padding-top: 15px;
    padding-bottom: 25px;
  }
  .wpforms-log-popup .wpforms-log-popup-flex-column-2 > div:nth-child(n + 2) {
    border-top: 1px solid #e4e4e4;
  }
  .wpforms-log-popup .wpforms-log-popup-flex-column-4 > div {
    flex: 0 0 50%;
    padding-top: 15px;
    padding-bottom: 25px;
  }
  .wpforms-log-popup .wpforms-log-popup-flex-column-4 > div:nth-child(n + 3) {
    border-top: 1px solid #e4e4e4;
  }
  .wpforms-log-popup .wpforms-log-popup-flex-column-4 > div:nth-child(- n + 2) {
    padding-bottom: 0;
  }
}

.wpforms-tools-tab-logs p.submit {
  padding-bottom: 50px;
}

.wpforms-tools-tab-logs h3 {
  line-height: 25px;
}

.wpforms-tools-tab-logs .wp-heading-inline {
  margin: 0;
  font-size: 18px;
  font-weight: 600;
  line-height: normal;
  color: #1d2327;
}

.wpforms-tools-tab-logs .wpforms-admin-content-header {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

.wpforms-tools-tab-logs .wpforms-admin-content-header .search-box {
  margin-bottom: 0;
}

@media (max-width: 768px) {
  .wpforms-tools-tab-logs .wpforms-admin-content-header .search-box {
    margin-top: 15px;
  }
}

.wpforms-tools-tab-logs .tablenav.top {
  margin: 11px 0;
  padding: 0;
}

.wpforms-tools-tab-logs .tablenav.top .tablenav-pages {
  margin: 0;
}

@media (max-width: 768px) {
  .wpforms-tools-tab-logs .wpforms-list-table .tablenav.top {
    height: 100px;
  }
  .wpforms-tools-tab-logs .wpforms-list-table .tablenav.top > * {
    margin-bottom: 10px;
  }
  .wpforms-tools-tab-logs .wpforms-list-table .tablenav.top input.button {
    margin-right: 15px;
  }
  .wpforms-tools-tab-logs .wpforms-list-table .tablenav.top:has(.no-pages),
  .wpforms-tools-tab-logs .wpforms-list-table .tablenav.top:has(.one-page) {
    height: auto;
  }
}

.wpforms-tools-tab-logs .tablenav-pages.no-pages {
  margin: 0;
}

.wpforms-tools-tab-logs .wpforms-list-table #log_id,
.wpforms-tools-tab-logs .wpforms-list-table #form_id {
  width: 80px;
}

.wpforms-tools-tab-logs .wpforms-list-table #types {
  width: 160px;
}

.wpforms-tools-tab-logs .wpforms-list-table .tablenav {
  height: 30px;
}

.wpforms-tools-tab-logs .wpforms-list-table .wp-list-table {
  margin: 9px 0 0 0;
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
